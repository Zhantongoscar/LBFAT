# 项目基本规则

## 1. 项目结构
- 所有项目文件必须按照规范组织在项目根目录下
- 遵守 docs/04-standards/development-standard.md 中的开发规范：
  * 2.1 命名规范
  * 2.2 代码风格
  * 2.3 注释规范
  * 2.4 Git提交规范
  * 2.5 错误处理规范
  * 2.6 测试规范
- 保持清晰的目录结构：backend/、frontend/、 mysql/、emqx/ docker/、docs/、tests/
- docker-compose.yml 放 LBFAT 根目录。相关文件放其他四个文件内。
## 2. 系统架构
- 项目仅包含四个Docker容器：前端、后端、MySQL和EMQX
- 所有需要安装的软件要在容器内安装实现，不要在项目文件夹实现。
- 各组件之间的数据交互必须保持一致性和对齐
- API接口遵循 development-standard.md 中 4.1-4.4 的RESTful规范

## 3. 数据库配置
- 使用 MySQL 5.7 版本
- 配置root用户允许远程访问（root@%）
- root密码统一为：13701033228
- 使用传统密码认证方式
- 必须启用数据库日志记录
- 遵循 development-standard.md 中 3.1-3.2 的数据库规范

## 4. 开发注意事项
- 前端和后端的API接口需要统一
- MQTT消息格式必须严格遵守规范
- 所有配置信息统一使用环境变量
- 代码提交前必须进行格式化和测试
- 单元测试覆盖率要求80%以上
- 遵循 development-standard.md 中第5章的日志规范

## 5. 安全要求
无安全要求

## 6. 部署规范
- 使用 Docker 容器化部署
- 提供环境变量模板
- 实现健康检查
- 配置资源使用限制

## 7. nginx数据处理
- 存在nginx数据处理，如：前端请求：/api/projects → nginx 处理 → /projects → 后端接收，请依据这个方法处理前后端报文。
